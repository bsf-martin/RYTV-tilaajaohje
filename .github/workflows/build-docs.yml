# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
  release:
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-documentation:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # permissions
    permissions:
          contents: write
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          path: main
          fetch-depth: 0
      #- name: Cache Docker images.
      #  uses: ScribeMD/docker-cache@0.3.3
      #  with:
      #    key: docker-${{ runner.os }}
      #- name: Check latest release
      #  id: last_release
      #  uses: mvesanen/get-latest-release@master
      #  with:
      #    myToken: ${{ github.token }}
      #    exclude_types: "prerelease,draft"
      #    view_top: 100
      #    ghRef : ${{ github.ref }}
      #- name: Print latest release info
      #  run: |
      #    echo "last_release_tag_name: ${{  steps.last_release.outputs.tag_name }}"
      #    echo "last_release_html_url: ${{  steps.last_release.outputs.html_url }}"
      #- name: Check out latest release tag
      #  if: ${{ steps.last_release.outputs.tag_name }}
      #  uses: actions/checkout@v4
      #  with:
      #    ref: ${{ steps.last_release.outputs.tag_name }}
      #    fetch-depth: 0
      #    path: lastrelease
      #- name: Switch to latest release tag 
      #  run: |
      #    cd ${{ github.workspace }}/lastrelease      
      #    git checkout -b  ${{ steps.last_release.outputs.tag_name }}
      - name: Make artefact and staging folders
        run: |
          mkdir ${{github.workspace}}/main/artefact
          mkdir ${{github.workspace}}/main/staging
          mkdir ${{github.workspace}}/main/gh-pages
          mkdir ${{github.workspace}}/main/gh-pages/figures
          cp -r ${{github.workspace}}/main/figures/ ${{github.workspace}}/main/gh-pages/figures
      - name: Run the build process with imbuilder docker
        uses: addnab/docker-run-action@v3
        with:
          image: mvesanen/imbuilder:latest
          options: -v ${{ github.workspace }}/main:/git -v ${{ github.workspace }}/lastrelease:/lastrelease
          run: |  
            echo "Prosessing intermediate markdown ..."
            python /docbuild/moustache_handler.py /git/markdown/main.md /git/staging/main.md /Draft /Draft
            echo "Build main pdf document"
            ln -s /git/figures/ /git/staging/figures
            cp /git/figures/logo/* ./
            python /docbuild/make-pdf.py /git/staging/main.md /git/artefact/RYTV-tilaajaohje.pdf
            pandoc --template=/git/templates/github-pages.html --toc -o /git/gh-pages/index.html /git/staging/main.md
            cp /git/templates/styles.css /git/gh-pages/styles.css
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          #auto enable github pages for repository
          enablement: true  
      - name: Upload generated pages
        uses: actions/upload-pages-artifact@v3
        with: 
          path: ./main/gh-pages 
      - name: Collect  artefacts 
        uses: actions/upload-artifact@v4
        with:
          name: Tilaajaohje (PDF)
          path: |
            ${{ github.workspace }}/main/artefact/RYTV-tilaajaohje.pdf
      - name: Release files
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{ github.workspace }}/main/artefact/RYTV-tilaajaohje.pdf
  # Deployment job
  deploy:
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-documentation
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
